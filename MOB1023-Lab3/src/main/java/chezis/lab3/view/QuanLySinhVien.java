/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package chezis.lab3.view;
import chezis.lab3.Student;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chezis P
 */
public class QuanLySinhVien extends javax.swing.JFrame {
private List<Student> dssv = new ArrayList<Student>();
    /**
     * Creates new form QuanLySinhVien
     */

    private int editingIndex; 
    private boolean editingUser = false;
    private String editingUserName = "";

    public QuanLySinhVien() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Trình Quản Lý Sinh Viên");
        setResizable(false);
        addDefaultMajors();
        addDefaultStudents();
        fillToTable();
    }
    
    public void addDefaultMajors() {
        String[] majors = new String[]{
            "Ứng dụng phần mềm",
            "Phát triển phần mềm",
            "Lập trình C / C++",
            "Thiết kế trang web",
            "Thiết kế đồ họa",
            "Digital Marketing"
        };
        DefaultComboBoxModel<String> boxModel = new DefaultComboBoxModel<>(majors);
        cboMajor.setModel(boxModel);
    }
    
    public void addDefaultStudents() {
        dssv.add(new Student("Trí", "Phát triển phần mềm", 10));
        dssv.add(new Student("Hậu", "Ứng dụng phần mềm", 7.5));
        dssv.add(new Student("Cường", "Lập trình ứng dụng", 6.5));
        dssv.add(new Student("Hiếu", "Lập trình C / C++", 5.5));
        dssv.add(new Student("Đăng", "Thiết kế trang web", 7.4));
    }
    
    public void addStudent(){
        Student sv = new Student();
        sv.name     = txtFullname.getText();
        sv.major    = (String) cboMajor.getSelectedItem();
        sv.marks    = Double.parseDouble(txtMark.getText());
        
        dssv.add(sv);
        txtGrade.setText(sv.getGrade());
        chkReward.setSelected(sv.isBonus());
    }
    
    public void removeStudent(){
        dssv.remove(editingIndex);
    }
    
    public void updateStudent(){
        Student sv = dssv.get(editingIndex);
        sv.setName(editingUserName);
        sv.setMarks(Double.parseDouble(txtMark.getText()));
        sv.setMajor(String.valueOf(cboMajor.getSelectedItem()));
    }
    
    public void fillToTable(){
        DefaultTableModel model = (DefaultTableModel) tblManage.getModel();
        model.setRowCount(0);
        for ( Student sv : dssv ) {
            Object[] singleRow = new Object[]{sv.getName(), sv.getMarks(), sv.getMajor(), sv.getGrade(), sv.isBonus()};
            model.addRow(singleRow);
        }
    }
    
    public void showDetail(){
        int index = tblManage.getSelectedRow();
        Student sv = dssv.get(index);
        
        // Get
        System.out.println("Đang xem:");
        System.out.println("Name    : " + sv.name);
        System.out.println("Điểm    : " + sv.marks);
        System.out.println("Ngành   : " + sv.major);
        System.out.println("Học Lực : " + sv.getGrade());
        if ( sv.isBonus() ) {
            System.out.println("Thưởng  : Có");
        } else {
            System.out.println("Thưởng  : Không");
        }
        System.out.println("");
        
        // Post
        txtFullname.setText(sv.name);
        txtMark.setText(String.valueOf(sv.marks));
        cboMajor.setSelectedItem(sv.major);
        txtGrade.setText(sv.getGrade());
        chkReward.setSelected(sv.isBonus());
        
        // Data Editing
        editingIndex = index;
        editingUser = true;
        editingUserName = sv.name;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblQLSV = new javax.swing.JLabel();
        lblFullName = new javax.swing.JLabel();
        lblMarks = new javax.swing.JLabel();
        lblMajor = new javax.swing.JLabel();
        lblGrade = new javax.swing.JLabel();
        txtFullname = new javax.swing.JTextField();
        txtMark = new javax.swing.JTextField();
        txtGrade = new javax.swing.JTextField();
        chkReward = new javax.swing.JCheckBox();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManage = new javax.swing.JTable();
        cboMajor = new javax.swing.JComboBox<>();
        btnSortByName = new javax.swing.JButton();
        btnSortByScore = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblQLSV.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblQLSV.setForeground(new java.awt.Color(255, 0, 0));
        lblQLSV.setText("QUẢN LÝ SINH VIÊN");

        lblFullName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFullName.setText("HỌ VÀ TÊN");

        lblMarks.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMarks.setText("ĐIỂM");

        lblMajor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMajor.setText("NGÀNH");

        lblGrade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGrade.setText("HỌC LỰC");

        txtFullname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFullname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullnameActionPerformed(evt);
            }
        });

        txtMark.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarkActionPerformed(evt);
            }
        });

        txtGrade.setEnabled(false);

        chkReward.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkReward.setText("Có phần thưởng ( 7.5 Điểm Trở Lên )");
        chkReward.setEnabled(false);

        btnAdd.setBackground(new java.awt.Color(252, 252, 252));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.setMargin(new java.awt.Insets(2, 18, 2, 18));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(252, 252, 252));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.setMargin(new java.awt.Insets(2, 18, 2, 18));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(252, 252, 252));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdate.setText("Cập Nhật");
        btnUpdate.setMargin(new java.awt.Insets(2, 18, 2, 18));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(252, 252, 252));
        btnReset.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnReset.setText("Nhập Mới");
        btnReset.setMargin(new java.awt.Insets(2, 18, 2, 18));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        tblManage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "HỌ VÀ TÊN", "ĐIỂM", "NGÀNH", "HỌC LỰC", "THƯỞNG"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblManage.setColumnSelectionAllowed(true);
        tblManage.setRowHeight(26);
        tblManage.getTableHeader().setReorderingAllowed(false);
        tblManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblManageMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblManage);
        tblManage.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblManage.getColumnModel().getColumnCount() > 0) {
            tblManage.getColumnModel().getColumn(0).setResizable(false);
            tblManage.getColumnModel().getColumn(1).setResizable(false);
            tblManage.getColumnModel().getColumn(2).setResizable(false);
            tblManage.getColumnModel().getColumn(3).setResizable(false);
            tblManage.getColumnModel().getColumn(4).setResizable(false);
        }

        cboMajor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMajorActionPerformed(evt);
            }
        });

        btnSortByName.setBackground(new java.awt.Color(252, 252, 252));
        btnSortByName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSortByName.setText("Sắp xếp theo tên");
        btnSortByName.setMargin(new java.awt.Insets(2, 18, 2, 18));
        btnSortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByNameActionPerformed(evt);
            }
        });

        btnSortByScore.setBackground(new java.awt.Color(252, 252, 252));
        btnSortByScore.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSortByScore.setText("Sắp xếp theo điểm");
        btnSortByScore.setMargin(new java.awt.Insets(2, 18, 2, 18));
        btnSortByScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByScoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFullName)
                                .addGap(18, 18, 18)
                                .addComponent(txtFullname))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMarks)
                                    .addComponent(lblMajor)
                                    .addComponent(lblGrade))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMark)
                                    .addComponent(txtGrade)
                                    .addComponent(cboMajor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkReward)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(245, 245, 245)
                                .addComponent(lblQLSV))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnSortByName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSortByScore, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQLSV)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFullName)
                    .addComponent(txtFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarks)
                    .addComponent(txtMark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMajor)
                    .addComponent(cboMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGrade)
                    .addComponent(txtGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkReward)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSortByName)
                    .addComponent(btnSortByScore))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullnameActionPerformed

    private void txtMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarkActionPerformed

    // Bài 1 
    
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        clearInputData();
        editingIndex = -1;
        editingUser = false;
        editingUserName = "";
        JOptionPane.showMessageDialog(null, "Đã xóa hết thông tin trên bảng", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnResetActionPerformed

    private void cboMajorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMajorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMajorActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int inputMark;

        if (!editingUser) {
            if (txtFullname.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Chưa nhập tên sinh viên!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (txtMark.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Chưa nhập điểm sinh viên!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (Integer.parseInt(txtMark.getText()) >= 0 && Integer.parseInt(txtMark.getText()) <= 10) { 
                try {
                    inputMark = Integer.parseInt(txtMark.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Điểm bạn nhập không phải là số", "Error", JOptionPane.ERROR_MESSAGE);
                    return;  // Thoát ra khỏi hàm nếu gặp lỗi
                }
                this.addStudent();
                this.fillToTable();
                clearInputData();
                JOptionPane.showMessageDialog(null, "Bạn đã thêm user " + txtFullname.getText(), "Success", JOptionPane.INFORMATION_MESSAGE);
            } else if (Integer.parseInt(txtMark.getText()) < 0) {
                JOptionPane.showMessageDialog(null, "Bạn đã nhập điểm nhỏ hơn 0!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (Integer.parseInt(txtMark.getText()) > 10) {
                JOptionPane.showMessageDialog(null, "Bạn đã nhập điểm lớn hơn 10!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Không thể thêm, Bạn đang chỉnh sửa user: " + editingUserName, "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblManageMouseClicked
        this.showDetail();
    }//GEN-LAST:event_tblManageMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (editingUser){
            int i = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa sinh viên " + editingUserName + " ?", "Asking Client", JOptionPane.INFORMATION_MESSAGE);
            switch(i){
                case JOptionPane.YES_OPTION -> {    
                    this.removeStudent();
                    this.fillToTable();
                    clearInputData();
                    editingIndex = 0;
                    editingUser = false;
                    editingUserName = "";
                }
                case JOptionPane.NO_OPTION -> System.out.println("Người dùng chọn không");
                case JOptionPane.CANCEL_OPTION -> System.out.println("Người dùng hủy");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn sinh viên nào !", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (editingUser){
            int i = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn cập nhật sinh viên " + editingUserName + " ?", "Asking Client", JOptionPane.INFORMATION_MESSAGE);
            switch(i){
                case JOptionPane.YES_OPTION -> {    
                    this.updateStudent();
                    this.fillToTable();
                    clearInputData();
                    editingIndex = 0;
                    editingUser = false;
                    editingUserName = "";
                }
                case JOptionPane.NO_OPTION -> System.out.println("Người dùng chọn không");
                case JOptionPane.CANCEL_OPTION -> System.out.println("Người dùng hủy");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn sinh viên nào !", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void sortByName(){
        Comparator<Student> com = new Comparator<Student>() {
            @Override
            public int compare(Student o1, Student o2) {
                return o1.name.compareTo(o2.name);
            }
        };
        Collections.sort(dssv, com);
    }
    
    private void sortByScore(){
        Comparator<Student> com = new Comparator<Student>() {
            @Override
            public int compare(Student o1, Student o2) {
                Double d1 = o1.marks;
                Double d2 = o2.marks;
                return d1.compareTo(d2);
            }
        };
        Collections.sort(dssv, com);
    }   
    
    private void btnSortByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByNameActionPerformed
        this.sortByName();
        this.fillToTable();
    }//GEN-LAST:event_btnSortByNameActionPerformed

    private void btnSortByScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByScoreActionPerformed
        this.sortByScore();
        this.fillToTable();
    }//GEN-LAST:event_btnSortByScoreActionPerformed

    private void clearInputData() {
        txtFullname.setText("");
        txtMark.setText("");
        txtGrade.setText("");
        chkReward.setSelected(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySinhVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSortByName;
    private javax.swing.JButton btnSortByScore;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboMajor;
    private javax.swing.JCheckBox chkReward;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblMajor;
    private javax.swing.JLabel lblMarks;
    private javax.swing.JLabel lblQLSV;
    private javax.swing.JTable tblManage;
    private javax.swing.JTextField txtFullname;
    private javax.swing.JTextField txtGrade;
    private javax.swing.JTextField txtMark;
    // End of variables declaration//GEN-END:variables
}
